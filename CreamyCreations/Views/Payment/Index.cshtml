@model CreamyCreations.ViewModels.PaymentVM

@{
    ViewData["Title"] = "Index";
}

<h1>Your epic cake</h1>

<h2>Total Price: $@Model.TotalPrice</h2>
<h2>Fillings:</h2>
<ul>
    @foreach (var filling in Model.Fillings)
    {
        <li>@filling.Flavor</li>
    }
</ul>

<h2>Cover:</h2>
<ul>
    @foreach (var cover in Model.Covers)
    {
        <li>@cover.Flavor</li>
    }
</ul>

<h2>Decorations:</h2>
<ul>
    @foreach (var decoration in Model.Decorations)
    {
        <li>@decoration.Decoration1</li>
    }
</ul>

<!-- input that accepts a type date-->
<label for="date">Delivery Date:</label>
<input type="date" name="date" id="date" />

<div id="paypal-button"></div>
<button id="send">E</button>
<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>
	const date = document.getElementById('date');
	const paypalButton = document.getElementById('paypal-button');
    paypalButton.style.display = 'none';
	// make sure that the user has chosen a date before proceeding
	date.onchange = function() {
		if(date.value) {
			paypalButton.style.display = 'block';
        } else{
			paypalButton.style.display = 'none';
        }
    }
	
    paypal.Button.render({
        env: 'sandbox', // Or ' production '
        style: {
            size: 'small',
            color: 'gold',
            shape: 'pill',
            label: 'checkout'
        },
        client: {
            sandbox: 'ATZD0fV4EGXzHq_c5YokYWv0TICaeDVu5h6-VeI1tBfZjuosmeBK6Es66JLNY91A8in1tRfK6IG5aVrh',
            // production: 'ATZD0fV4EGXzHq_c5YokYWv0TICaeDVu5h6-VeI1tBfZjuosmeBK6Es66JLNY91A8in1tRfK6IG5aVrh'  // Switch to ‘production’ when live.
        },

        commit: true, // Show a 'Pay Now' button

        payment: function (data, actions) {
			if(date.value === "") return
            return actions.payment.create({
                payment: {
                    transactions: [{ amount: { total: @Model.TotalPrice, currency: 'CAD' }}]
                }
            });
        },

        onAuthorize: function (data, actions) {
            return actions.payment.execute().then(function (payment) {
                console.log("This is what comes back from Paypal: ")
                console.log(payment);
                alert("This JSON is from Paypal: " + JSON.stringify(payment));
                console.log("-------------------------------------")
                var dataObject = {
                    "cart":             payment.cart,
                    "intent":           payment.intent,
                    "paymentID":        payment.id,
                    "create_time":      payment.create_time,
                    "paymentState":     payment.state,
                    "payerEmail":       payment.payer.payer_info.email,
                    "payerID":          payment.payer.payer_info.payer_id,
                    "payerFirstName":   payment.payer.payer_info.first_name,
                    "payerLastName":    payment.payer.payer_info.last_name,
                    "payerMiddleName":  payment.payer.payer_info.middle_name,
                    "payerCountryCode": payment.payer.payer_info.country_code,
                    "paymentMethod":    payment.payer.payment_method,
                    "payerStatus":      payment.payer.status,
                    "amount":           payment.transactions[0].amount.total,
                    "currency":         payment.transactions[0].amount.currency,
                    "custom":           payment.transactions[0].custom
                }
				const {line1: address, city, state: province, postal_code} = payment.payer.payer_info.shipping_address
				const userId = @ViewBag.userId
				const weddingCakeId = @Model.WeddingCakeId
				const deliveryDate = date.value
				console.log("-------------------------------------")
				const request = {address, city, province, userId, weddingCakeId, deliveryDate, postal_code}
            }
        },

        onCancel: function (data, actions) {
            alert("canceled")
        },
    }, '#paypal-button');
</script>
